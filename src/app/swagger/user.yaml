paths:
  /user:
    get:
      tags:
        - User
      responses:
        '200':
          description: Hello from user :D
  /user/all-users:
    get:
      description: Get all users
      tags:
        - User
      parameters:
        - name: username
          in: query
          description: Username to filter users
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of users
  /user/{userID}:
    get:
      description: Get a specific user by ID
      tags:
        - User
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the user
  /user/{userID}/shared:
    get:
      description: Get posts shared by the user
      tags:
        - User
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Posts shared by the user
  /user/{userID}/saved:
    get:
      description: Get posts saved by the user
      tags:
        - User
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Posts saved by the user
  /user/{userID}/quantity/image:
    get:
      description: Get quantity of images uploaded by the user
      tags:
        - User
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quantity of images uploaded by the user
  /user/{userID}/quantity/audio:
    get:
      description: Get quantity of audios uploaded by the user
      tags:
        - User
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quantity of audios uploaded by the user
  /user/register:
    post:
      description: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Registered user
  /user/login:
    post:
      description: Login a user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Logged in user
  /user/reset-password:
    post:
      description: Reset password
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Successfully   
  /user/update/{userID}:
    put:
      description: Update a user
      tags:
        - User
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/##/models/UserModel'
              example:
                firstName: "yanji"
                lastName: "social"
                username: "ys222"
                email: "example@gmail.com"
                password: "password"
                isVerify: false
                isVerifyEmail: false
                insta: "link insta"
                twitter: "link twitter"
                facebook: "link facebook:"
                linkedin: "link linkedin"
                github: "link github"
  /user/delete/{userID}:
    delete:
      description: Delete a user
      tags:
        - User
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully          

